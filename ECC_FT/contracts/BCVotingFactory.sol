pragma experimental ABIEncoderV2;

/**
 * Description:
 *   Smart contract wallet with 2-step authentication based on OTPs generated by CSPRNG and aggregated by Merkle tree.
 *
 * SPDX-License-Identifier: MIT
 */
// pragma solidity ^0.5.8;
pragma solidity >=0.5.8 <0.8.0;

import "./BCVoting.sol";

contract BCVotingFactory {

    event BCVotingContractCreated(address newAddress);

    function createBCVoting(
        string[] memory _candidates, uint[] memory _cand_generators, uint _deltaT, uint _mpc_batch_size
    ) public returns (BCVoting)  {
        BCVoting b = new BCVoting(_candidates, _cand_generators, _deltaT, _mpc_batch_size);
        // emit BCVotingContractCreated(address(b));
        return b;
    }

    function destruct() public {
        selfdestruct(msg.sender);
    }

}